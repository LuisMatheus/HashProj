
import Beans.Database;
import Beans.Tupla.Pagina;
import Beans.Tupla.Tupla;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextArea;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import org.graphstream.graph.Graph;
import org.graphstream.graph.implementations.DefaultGraph;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Matheus
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     *
     * @throws java.lang.NoSuchFieldException
     * @throws java.lang.IllegalAccessException
     */
    public static Database db = new Database();

    public GUI() throws NoSuchFieldException, IllegalArgumentException, IllegalAccessException {
        initComponents();

        jComboBox1.addItem("SELECT matricula , nome FROM empregado WHERE salario < 5000");
        jComboBox1.addItem("SELECT cod_dep , nome FROM departamento WHERE cod_dep = 15");
        jComboBox1.addItem("SELECT * FROM empregado WHERE matri = 7777");
        jComboBox1.addItem("SELECT matri , nome , salario FROM empregado WHERE matri < 3500");

        db.carregarArquivos(50);

        Field[] f = new Field[4];

        DefaultTableModel empregado_Table_Model = new DefaultTableModel();
        jTable2.setModel(empregado_Table_Model);

        empregado_Table_Model.addColumn("matri");
        empregado_Table_Model.addColumn("nome");
        empregado_Table_Model.addColumn("salario");
        empregado_Table_Model.addColumn("lotacao");

        for (Pagina p : db.empregadoOrdered) {
            for (Tupla t : p.tuplas) {
                f[0] = t.getClass().getDeclaredField("matri");
                f[0].setAccessible(true);
                f[1] = t.getClass().getDeclaredField("nome");
                f[1].setAccessible(true);
                f[2] = t.getClass().getDeclaredField("salario");
                f[2].setAccessible(true);
                f[3] = t.getClass().getDeclaredField("lotacao");
                f[3].setAccessible(true);
                empregado_Table_Model.addRow(new Object[]{f[0].getInt(t), (String) f[1].get(t), f[2].getDouble(t), f[3].getInt(t)});
            }
            empregado_Table_Model.addRow(new Object[]{"=====", "=====", "=====", "====="});
        }

        DefaultTableModel dependente_Table_Model = new DefaultTableModel();
        jTable1.setModel(dependente_Table_Model);

        dependente_Table_Model.addColumn("matri_resp");
        dependente_Table_Model.addColumn("nome");

        for (Pagina p : db.dependente) {
            for (Tupla t : p.tuplas) {
                f[0] = t.getClass().getDeclaredField("matri_resp");
                f[0].setAccessible(true);
                f[1] = t.getClass().getDeclaredField("nome");
                f[1].setAccessible(true);
                dependente_Table_Model.addRow(new Object[]{f[0].getInt(t), (String) f[1].get(t)});
            }
            dependente_Table_Model.addRow(new Object[]{"==========", "=========="});
        }

        DefaultTableModel departamento_Table_Model = new DefaultTableModel();
        jTable3.setModel(departamento_Table_Model);

        departamento_Table_Model.addColumn("cod_dep");
        departamento_Table_Model.addColumn("nome");

        for (Pagina p : db.departamento) {
            for (Tupla t : p.tuplas) {
                f[0] = t.getClass().getDeclaredField("cod_dep");
                f[0].setAccessible(true);
                f[1] = t.getClass().getDeclaredField("nome");
                f[1].setAccessible(true);
                departamento_Table_Model.addRow(new Object[]{f[0].getInt(t), (String) f[1].get(t)});
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Consultas");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Consulta"));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>());
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setText("Consultar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultado"));

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Graph args = new DefaultGraph("graph");

        args = db.parser((String) jComboBox1.getSelectedItem(), jComboBox1.getSelectedIndex());

        ArrayList<ArrayList<Tupla>> resultado = db.processadorDeConsulta(args);

        //tabela 
        DefaultTableModel resultado_Table_Model = new DefaultTableModel();
        jTable4.setModel(resultado_Table_Model);

        Field[] f = new Field[4];
        switch (jComboBox1.getSelectedIndex()) {
            case 0:

                resultado_Table_Model.addColumn("matri");
                resultado_Table_Model.addColumn("nome");
                for (Tupla t : resultado.get(0)) {
                    try {
                        f[0] = t.getClass().getDeclaredField("matri");
                        f[0].setAccessible(true);
                        f[1] = t.getClass().getDeclaredField("nome");
                        f[1].setAccessible(true);
                        resultado_Table_Model.addRow(new Object[]{f[0].getInt(t), (String) f[1].get(t)});
                    } catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException ex) {
                        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                args.display();

                break;
            case 1:

                resultado_Table_Model.addColumn("cod_dep");
                resultado_Table_Model.addColumn("nome");
                for (Tupla t : resultado.get(0)) {
                    try {
                        f[0] = t.getClass().getDeclaredField("cod_dep");
                        f[0].setAccessible(true);
                        f[1] = t.getClass().getDeclaredField("nome");
                        f[1].setAccessible(true);
                        resultado_Table_Model.addRow(new Object[]{f[0].getInt(t), (String) f[1].get(t)});
                    } catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException ex) {
                        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                args.display();

                break;
            case 2:

                resultado_Table_Model.addColumn("matri");
                resultado_Table_Model.addColumn("nome");
                resultado_Table_Model.addColumn("salario");
                resultado_Table_Model.addColumn("lotacao");

                for (Tupla t : resultado.get(0)) {
                    try {
                        f[0] = t.getClass().getDeclaredField("matri");
                        f[0].setAccessible(true);
                        f[1] = t.getClass().getDeclaredField("nome");
                        f[1].setAccessible(true);
                        f[2] = t.getClass().getDeclaredField("salario");
                        f[2].setAccessible(true);
                        f[3] = t.getClass().getDeclaredField("lotacao");
                        f[3].setAccessible(true);
                        resultado_Table_Model.addRow(new Object[]{f[0].getInt(t), (String) f[1].get(t), f[2].getDouble(t), f[3].getInt(t)});
                    } catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException ex) {
                        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                args.display();

                break;
            case 3:

                resultado_Table_Model.addColumn("matri");
                resultado_Table_Model.addColumn("nome");
                resultado_Table_Model.addColumn("salario");

                for (Tupla t : resultado.get(0)) {
                    try {
                        f[0] = t.getClass().getDeclaredField("matri");
                        f[0].setAccessible(true);
                        f[1] = t.getClass().getDeclaredField("nome");
                        f[1].setAccessible(true);
                        f[2] = t.getClass().getDeclaredField("salario");
                        f[2].setAccessible(true);
                        
                        resultado_Table_Model.addRow(new Object[]{f[0].getInt(t), (String) f[1].get(t), f[2].getDouble(t)});
                    } catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException ex) {
                        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                args.display();

                break;
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     * @throws java.lang.NoSuchFieldException
     */
    public static void main(String args[]) throws NoSuchFieldException {
        try {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
             */

            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
            //</editor-fold>

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(GUI.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new GUI().setVisible(true);

            } catch (NoSuchFieldException | IllegalArgumentException | IllegalAccessException ex) {
                Logger.getLogger(GUI.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    // End of variables declaration//GEN-END:variables
}
